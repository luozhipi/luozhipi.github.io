
# Zhiping Luo| Curriculum Vitae [[download]]#

Male • 1986 • Single

English • Chinese

[luozhipi@gmail.com](mailto:luozhipi@gmail.com) • [luozhipi.github.io](http://luozhipi.github.io) • [github.com/luozhipi](https://github.com/luozhipi)

C++ • C# • JAVA • Python • PySide • Wing IDE • OpenCV • Eigen • Boost • OpenGL • GLSL • Maya • JavaScript • CGAL • Matlab • Adobe after effects

Computer vision: object recognition and tracking • image search

Computer graphics: 3D character animation • shape modeling

## Education ##

----------

`Utrecht University`         										Netherlands

PhD in Computer Graphics,  						2012.02–2016.01 (supported by the [COMMIT] project)

Dissertation: Interactive Character Deformation Using Simplified Elastic Models [[preprint]]


`South China University of Technology`   Guangzhou, China

Master in Image Processing and Pattern Recognition,  						2007.09–2010.07

Thesis: Towards Landmark Recognition Via Large Scale Social Media Mining


`Nanchang University`           										Nanchang, China

Bachelor in Embedded System,  						2003.09–2007.07


## Publication ##

----------
Z. Luo, R.C. Veltkamp, A. Egges.: `Volumetric Space Deformations Based on Voxels`. submitted to Journal of Visual Computer.

Z. Luo, R.C. Veltkamp, A. Egges.: `Fast Multi-Domain Smooth Embedding for Character Deformation`. revision submitted to Journal of Computer Animation and Virtual Worlds.

Z. Luo, R.C. Veltkamp, A. Egges.: `As-Rigid-As-Possible Character Deformation Using Point Handles`. 11th International Symposium on Visual Computing 2015 (ISVC'15), oral.

Z. Luo, R.C. Veltkamp, A. Egges.: `Flexible Point Handles Metaphor for Character Deformation`. ACM Symposium on Virtual Reality Software and Technology (VRST) 2015, poster.

Z. Luo, R.C. Veltkamp, A. Egges.: `Volumetric Surface Deformation with Auxiliary Voxel Grids`. The 32nd Annual Conference on Computer Graphics International (CGI) 2015, short paper. [VoxelARAP code]

Z. Luo, R.C. Veltkamp, A. Egges.: `Space Deformation for Character Deformation using Multi-Domain Smooth Embedding`. The 28th Annual Conference on Computer Animation and Social Agents (CASA 2015), short paper.

Z. Luo, N. Pronost, A. Egges.: `Physics-based Human Neck Simulation`. Virtual Reality Interactions and Physical Simulations 2013: 10p. [FEMNeck code]

Z. Luo, H. Li, J. Tang, R. Hong, TS. Chua.: `ViewFocus: explore places of interests on Google maps using photos with view direction filtering`. Proceedings of the 17th ACM international conference on Multimedia 2009: 963-964.

Z. Luo, H. Li, J. Tang, R. Hong, TS. Chua.: `Estimating poses of world's photos with geographic metadata`. Advances in Multimedia Modeling 2010, 695-700.

Z. Luo, X. Zhang.: `A Semi-Supervised Learning Based Relevance Feedback Algorithm in Content-Based Image Retrieval`. Pattern Recognition, 2008. CCPR '08. Chinese Conference on , vol., no., pp.1,4, 22-24 Oct. 2008.

J. Lu, VA. Nguyen, Z. Niu, B. Singh, Z. Luo, MN. Do.: `CuteChat: a lightweight tele-immersive video chat system`. ACM Multimedia 2011: 1309-1312. [CuteChat]

TS. Chua, J. Tang, R. Hong, H. Li, Z. Luo, Y. Zheng.: `NUS-WIDE: a real-world web image database from National University of Singapore`. Proceedings of the ACM International Conference on Image and Video Retrieval 2009, 48. [NUS-WIDE]

R. Hong, J. Tang, ZJ. Zha, Z. Luo, TS. Chua.: `Mediapedia: Mining web knowledge to construct multimedia encyclopedia`. Advances in Multimedia Modeling 2010, 556-566.

Y Wu, M Wang, G Li, Z Luo, TS Chua, X Liu.: `VDictionary: automatically generate visual dictionary via wikimedias`. Advances in Multimedia Modeling, 796-798.

RH. Li; Z. Luo; G. Han.: `Pseudo-inverse Locality Preserving Projections`. Computational Intelligence and Security. 2009. CIS '09. International Conference on , vol.1, no., pp.363,367, 11-14 Dec. 2009.

## Presentation ##

----------
`As-Rigid-As-Possible Character Deformation Using Point Handles`, 11th International Symposium on Visual Computing 2015 (ISVC'15), Las Vegas, Nevada, USA, December 14, 2015.

`Flexible Point Handles Metaphor for Character Deformation`, ACM Symposium on Virtual Reality Software and Technology (VRST) 2015, Beijing, China, November 13th, 2015.

`Volumetric Surface Deformation with Auxiliary Voxel Grids`, Computer Graphics International 2015, Strasbourg, France, June 25, 2015.

`Space Deformation for Character Deformation using Multi-Domain Smooth Embedding`, 28th Annual Conference on Computer Animation and Social Agents, Singapore, May 13, 2015.

`Physics-based Human Neck Simulation`, 10th Workshop on Virtual Reality Interaction and Physical Simulation, INRIA Lille,  France, November 28, 2013.

`Real-time Human Neck Animation Using Simulated Blendshapes`, GRIS Kolloquium, TU Darmstadt, Germany, 10-Oct-2013.

`ViewFocus: explore places of interests on Google maps using photos with view direction filtering`, ACM Multimedia Conference 2009, Beijing, Oct, 2009.

## Research Experience ##

----------

###Ph.D student researcher, Utrecht University, Netherlands###

2012-02 ~ 2016-01

3D character deformation:           **Skinning, Deformable body**

- `Facial animation`:  This project includes text-to-speech conversion based on the Microsoft Speech SDK, and speech-driven facial expression synthesis based on the MPEG-4 standard. A phonogram is mapped to a specific expression (a morph target), those of which are blended with weights that related to the tone. The front-end is implemented in Python, and the engine is based on Ogre and C++. The system can also import motion capture data (c3d format), and map them onto the face's feature points to drive the animation.
- `Human neck modeling`: Proposed a method for modeling and simulating the human neck and its skin deformation at interactive rates on a modern laptop. Starting from the Ultimate Human Model (UHM) data set which includes a comprehensive set of the human's anatomy structures, a model ready for simulation of the neck's bio-mechanics and musculoskeletal dynamics is developed. The work involves interdisciplinary knowledge. First, use Maya to deal with the geometric issues such as holes and degeneration of the polygonal meshes in order to facilitate the meshing procedure by Tetgen. The muscles represented as volumetric meshes resulting from the meshing are modeld by the Finite Element Method with co-rotational material. The bones are modeled as rigid bodies, and the skin as a mass-spring network. Remarkably, proposed soft constraints realized by linear, elastic springs for coupling the rigid (bone) and soft (muscle) bodies. Skeleton motion is simulated by multi-body dynamic system. The overall dynamics is formulated as a Lagrangian dynamic system, which is numerically solved by a semi-implicit time integrator. In order to obtain substaintial speed ups, considerable effort is made such as, reducing the number of finite elements, empirically selecting a subset of anatomy structures, and exploiting linearization without sacrificing much deformation realism.
- `Volumetric, elastic energy minimization`: Methods that cast the deformation as an elastic energy minimization enhance the realism of deformation by supporting elastic deformations. The as-rigid-as-possible rigidity energy is widely researched, as this form of elasticity formulization is relatively easy to achieve and the minimization of its objective function is also easy to implement. In additon to the elastic deformation of the surface, proposed a volumetric, as-rigid-as-possible energy for volume-preservation based on voxel grids which provide accessible neighboring structure for defining the elements. Here, the minimization will enforce the transformation to be rigid of an element throughout the deformation. Thus, the lengths in voxel edges are approximately preserved, in turn the volume.
- `Space deformation`: Finite Element simulation and nonlinear, elastic energy is often computationally expensive, hindering their applications in interative or real-time scenarios. Space deformation as an effective, accelerating strategy, provides a solution in an indirect manner. In this context, the simulation or minimization is performed on a coarser mesh enclosing the subject surface. The generated deformation is projected back to the target surface often by barycentric interpolation that is not smooth enough to interpolate surfaces. To adapt to character deformation where local control and smoothness are typically the two major concerns, proposed a method to compute space deformations based on domain decomposition and radial basis function (RBF) interpolation. Here, a skeletal character is partitioned into bone-associated domains according to influence weights, each of which is attached to a local RBF system used to interpolate the displacements. Seam artifact is surpressed by Laplacian smoothing with cotangent weights. The decomposition also works for characters whose binding is achived using an auto-weighting scheme. Results also show that, interpolation by local RBF systems instead of a global, single RBF system is much more robust since the likehood of a degenerated matrix used in solving the RBF syetem is largely reduced.
- `Learning linear blend skinning model from blendshapes`: Capturing (by 3D scanning or by motion capture cameras) is typically the way to obtain realistic deformations of the subject in particular in CG-enriched films production. Artists will also "slightly" sculpt the reconstructed shapes and ultimately lead to a large set of blendshapes. The drawbacks of using blendshapes are: (a) memory inefficient; (b) major game engines still prefer skeletal animation models; and (c) inconsist with an artist-friendly rigging pipeline. Thus, it is worth representing the blendshapes by the common used character animation model, namely the Linear Blend Skinning model. Researched various methods of learning a LBS model from blendshapes. It is typically to construct a non-negative least squares problems, minimizing the norm between the vertex positions resulting from LBS and the ones in blendshapes, subject to non-negative and normalization constraints of the weights. Bone transformation is approximated as the transformation of the animated plane (vertices influenced by that bone), resulting from SVD ot its variants. 
- `Soft body animation`: Based on Bullet's continuous collision detection, developed a program for soft body animation. In particular incorporated the Fast Lattice Shape Matching method into Bullet. The surface deformation is generated by trilinear interpolation on CPU.

<img src="http://luozhipi.github.io/work/neck.png" alt="human neck" title="human neck modeling and simulation" width="400">

<img src="http://luozhipi.github.io/work/point01.png" alt="point handles" title="point handle based skinning" width="400">

<img src="http://luozhipi.github.io/work/domain01.png" alt="point handles" title="domain-decomposition and RBF interpolation for space deformations" width="400">

<img src="http://luozhipi.github.io/work/voxelARAP.png" alt="voxel arap" title="nonlinear, volumetric, ridigity energy minimization" width="400">

<div>
<img src="http://luozhipi.github.io/work/mocap01.png" alt="point handles" title="motion capture and LBS" width="200">
<img src="http://luozhipi.github.io/work/mocap02.png" alt="point handles" title="motion capture and DQS" width="200">
</div>

<div>
<img src="http://luozhipi.github.io/work/sa01.png" alt="soft body" title="soft body animation" width="200">
<img src="http://luozhipi.github.io/work/sa02.png" alt="soft body" title="soft body animation and trilinear interpolation" width="200">
<img src="http://luozhipi.github.io/work/sa03.png" alt="soft body" title="soft body animation, and surface animation by LBS" width="200">
</div>

<div>
<img src="http://luozhipi.github.io/work/sa04.png" alt="soft body" title="soft body animation, and surface animation by DQS" width="200">
<img src="http://luozhipi.github.io/work/sa05.png" alt="soft body" title="soft body animation" width="200">
<img src="http://luozhipi.github.io/work/sa06.png" alt="soft body" title="soft body animation, and surface animation by implicit skinning" width="200">
</div>

###Research associate, gameLAB of Nanyang Technological University, Singapore###

2011-09 ~ 2012-01

Computer vision: 					  **motion tracking**

- `Marker-based low-body motion tracking`: Track the marker motion by OpenCV's template matching, with different matching functions. Visualize the recorded motion trajectory by OpenGL and vtk. 

###Software Engineer, Advanced Digital Sciences Center of University of Illinois Urbana-Champaign, Singapore###

2010-10 ~ 2011-09

Computer vision: 					  **Object segmentation and tracking**

- `Camera calibration`: Estimate the intrinsic and extrinsic parameters of a camera rig consisting of a swissranger 4000 and a RGB camera. First, following the same RGB camera calibration, where it takes the images of the chessbord from different views, the intrinsic parameters per camera are estimated (by cvCalibrateCamera2). Notice that the intensity image from the depth camera should be resized as the same resolution as the color image. Since the depth camera directly provides the point cloud that can be considered as the 3D points in a coordinated frame, the transformation between RGB and depth camera can be calculated by cvFindExtrinsicCameraParams2(...).
- `Lightweight immersive chat system`: As a foundation developer, our team developed a real-time, object cutout technique used in conferencing and chat. The multiple parties in chatting can be freely projected onto the screen and shared to all, providing a novel form of immersive experience like collaborative-gaming, remote education. Took charge of the shared-memory parallelization based on OpenMP, and multi-threading internet photo crawler, replacing the background with rich content like photos, slides, and videos.
- `Gesture recognition`: Use the depth and color cue provided by Kinect to recognize and track hand gestures, supporting new interactions with the chat system such as pointing to highlight the region of interest and sliding to replace the background photo. 

<img src="http://luozhipi.github.io/work/cutechat.png" alt="cutchat" title="lightweight immersive chat system, object cutout and background replacement" width="400">

###Research Intern, Lab for Media Search, National University of Singapore, Singapore###

2008-09 ~ 2009-12

**Internet image search**

- `View filtering landmark exploration`: Given the textual keyword, map it to the longitude-atitude from the information provided by wikitravel. Acoording to the keyword and geo-location, retrieve photos shot within that location in a given radius. Extract SIFT features of photos, then construct the bag-of-words (BoW) vectors. Perform meanshift clustering, selecting the photos whose BoW close to the cluster centers in order to filter out the photos without significant objects of interest. Use bundle adjustment (Bundler) to estimate the camera matrices from stereo matching of the SIFT point cloud. By defining a 3D reference coordinate frame of the Google Map, register the cameras' poses onto the map. Users select a region of interest of the landmark on map, the sytems will return the photos whose views pointing to that region. The front-end was implemented in Flex, and the processing in C++ which was then wrapped as a web service.
- ` Image annotation`: Implemented a program for web-scale image annotation in C# and MySql.
- `Image search benchmark construction`: Implemented a flickr image crawler. Extract low-level features, and combined with textual feature (tf-idf) use SVM and k-NN to train high-level category classifiers, e.g. the semantics like sunset, tiger and so on.

<img src="http://luozhipi.github.io/work/viewfocus.png" alt="viewfocus" title="view filtering landmark exploration" width="400">

###Research Fellow, Singapore Management University, Singapore###
 
2009-12 ~ 2010-03

**Social network mining**

- `Product review spam detection`: Developed a model for detecting product review spam in JAVA and MySql. The dataset is from Amonzon. One heuristic rule is to calculate dot product of the tf-idf vectors as a similarity metric, as spam reviews are often repeated. To develop the machine learning model, the program also supports user annotation in order to obtain learning samples.

<img src="http://luozhipi.github.io/work/smu.png" alt="review spam detection" title="review spam detection tool" width="400">

###Software Developer, FairEX International Financial System, Singapore###
 
2010-04 ~ 2010-10

**Forex trading system**

- As the sole developer, implemented the front-end of a foreign exchange trading system in adobe flex. Based on weborb, implemented the data streaming engine in JAVA, released as web services such that it can connect to all front-end in different laguages. As a novice guy, finished the development in only three months. In the latter three months, researched stock trading like how to visualize the charts, give valuable suggestions.

<img src="http://luozhipi.github.io/work/fairex.jpg" alt="forex trading" title="Adobe Flex and WebORB forex trading system" width="400">

## Certifications ##

----------
2006~ Software Architect awarded by Ministry of Industry and Information Technology of
China

2008～ System Analyst awarded by Ministry of Industry and Information Technology of
China

## Teaching Assistant ##

----------
2014-09~2014-11 Game Programming, Universiteit Utrecht

2015-04~2015-07 Three-dimensional Modeling, Universiteit Utrecht

[VoxelARAP code]: https://github.com/luozhipi/VoxelARAP
[CuteChat]: https://sites.google.com/site/adscitem/recent-contributions-2
[NUS-WIDE]: http://lms.comp.nus.edu.sg/research/NUS-WIDE.htm
[FEMNeck code]: https://github.com/luozhipi/FEM-Neck
[preprint]:  /papers/theis_v2_low.pdf
[download]:  /papers/Zhiping-CV-EN.pdf
[COMMIT]: http://www.commit-nl.nl/


